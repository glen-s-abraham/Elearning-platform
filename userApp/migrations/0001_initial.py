# Generated by Django 3.1.7 on 2021-03-05 06:14

from django.db import migrations, models
import django.db.models.manager


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('email', models.EmailField(max_length=255, unique=True)),
                ('name', models.CharField(max_length=255, unique=True)),
                ('course', models.CharField(choices=[('BSC.CS', 'Bsc computerScience'), ('MSC.CS', 'Msc computerScience')], default='BSC.CS', max_length=20)),
                ('semester', models.CharField(choices=[('S1', 'semester 1'), ('S2', 'semester 2'), ('S3', 'semester 3'), ('S4', 'semester 4'), ('S5', 'semester 5'), ('S6', 'semester 6')], default='S1', max_length=3)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('Objects', django.db.models.manager.Manager()),
            ],
        ),
    ]
